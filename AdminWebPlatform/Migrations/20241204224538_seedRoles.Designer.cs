// <auto-generated />
using AdminWebPlatform.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminWebPlatform.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241204224538_seedRoles")]
    partial class seedRoles
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminWebPlatform.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContentAccessLevel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserAccessLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContentAccessLevel = 0,
                            Name = "User",
                            UserAccessLevel = 0
                        },
                        new
                        {
                            Id = 2,
                            ContentAccessLevel = 1,
                            Name = "Reader",
                            UserAccessLevel = 0
                        },
                        new
                        {
                            Id = 3,
                            ContentAccessLevel = 15,
                            Name = "ContentModerator",
                            UserAccessLevel = 0
                        },
                        new
                        {
                            Id = 4,
                            ContentAccessLevel = 0,
                            Name = "UserModerator",
                            UserAccessLevel = 15
                        },
                        new
                        {
                            Id = 5,
                            ContentAccessLevel = 15,
                            Name = "Administrator",
                            UserAccessLevel = 15
                        });
                });

            modelBuilder.Entity("AdminWebPlatform.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AdminWebPlatform.Models.User", b =>
                {
                    b.HasOne("AdminWebPlatform.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
